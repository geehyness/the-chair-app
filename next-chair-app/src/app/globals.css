/* src/app/globals.css */
/* Page Transition Overlay Styles */

/* Keyframes for covering animation (rows sliding in from left) */
@keyframes cover-screen {
  from { transform: translateX(-100%); }
  to { transform: translateX(0); }
}

/* Keyframes for revealing animation (rows sliding out to right) */
@keyframes reveal-screen {
  from { transform: translateX(0); }
  to { transform: translateX(100%); }
}

/* Base styles for each wipe row */
.wipe-row {
  position: fixed;
  left: 0;
  width: 100%;
  height: 25vh; /* Each row takes 25% of viewport height */
  z-index: 9999; /* Ensure it's on top during animation */
  transform: translateX(-100%); /* Start off-screen left */
  pointer-events: none; /* Allow clicks to pass through when not active */
  /* Background color will be set dynamically by Chakra's theme in theme.ts global styles */
}

/* Animation classes for the rows */
.wipe-in {
  animation: cover-screen 0.5s ease-out forwards;
}

.wipe-out {
  animation: reveal-screen 0.5s ease-in forwards;
}

/* Delay animations for each row to create staggered effect */
.wipe-delay-1 { animation-delay: 0s; }
.wipe-delay-2 { animation-delay: 0.1s; }
.wipe-delay-3 { animation-delay: 0.2s; }
.wipe-delay-4 { animation-delay: 0.3s; }

/* Loading spinner container styles (now managed directly in PageTransitionProvider) */
/* The .loading-spinner-container class itself might not be strictly necessary if all styles are inline */
/* but keeping it for consistency if other parts of your app rely on it. */
/* The main overlay background will be handled by the motion.div in PageTransitionProvider */

/* Ensure Next.js Image fill works correctly with Chakra Box */
.chakra-image-container {
  position: relative;
  width: 100%;
  height: 100%;
}

/* Keep your existing fadeIn/fadeInUp animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fadeIn 0.5s ease-out forwards;
}

.animate-fade-in-up {
  animation: fadeInUp 0.6s ease-out forwards;
}
